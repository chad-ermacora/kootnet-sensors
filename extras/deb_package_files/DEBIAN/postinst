#!/bin/bash
PYTHON_VENV_DIR="/home/kootnet_data/env"
INSTALL_DIR="/opt/kootnet-sensors"
CONFIG_DIR="/etc/kootnet"
if [[ ! -f ${PYTHON_VENV_DIR}/bin/python ]]; then
  python3 -m venv --system-site-packages ${PYTHON_VENV_DIR}
  date >${CONFIG_DIR}/installed_datetime.txt
fi
${PYTHON_VENV_DIR}/bin/python3 -m pip install -U pip
${PYTHON_VENV_DIR}/bin/pip3 install -r ${INSTALL_DIR}/requirements.txt
OS=$(awk '/^ID=/' /etc/os-release | sed 's/ID=//')
if [ "${OS}" == "raspbian" ]; then
  printf "\n\nHey\n\n"
  ${PYTHON_VENV_DIR}/bin/pip3 install gpiozero pyserial spidev smbus smbus2 luma.core luma.oled
fi
echo '*/1 * * * * fake-hwclock' >>/tmp/tmp34441.txt
crontab -u root /tmp/tmp34441.txt
rm /tmp/tmp34441.txt
date >${CONFIG_DIR}/last_updated.txt
echo ' - DEB' >>${CONFIG_DIR}/last_updated.txt
systemctl daemon-reload
systemctl enable KootnetSensors
systemctl start KootnetSensors
printf "\n\nWaiting for program initalization to finish...\n\n"
counter=0
while true; do
  if [[ "$(wget --no-check-certificate -q -O - "https://localhost:10065/CheckOnlineStatus")" == "OK" ]]; then
    printf "Initalization Complete\n\n"
    printf 'Open https://localhost:10065 on the local sensor to configure\n\n'
    printf 'To access the sensor from another device, replace "localhost" with an IP\n'
    printf 'IP addresses show below  ** Note: 127.0.0.1 is the same as localhost **\n\n'
    ip -4 addr | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
    printf '\n'
    exit 0
  elif [ "$counter" -gt 45 ]; then
    printf "Timeout: Problem Initalizing Application, missing requirements?\n\n"
    exit 1
  fi
  sleep 2
  counter=$((counter + 1))
done
